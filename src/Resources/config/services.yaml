parameters:
  streak.redis.host: 'localhost'
  streak.redis.port: 6379
  streak.redis.database: 1
  streak.command_retry_max_attempts: 0
  streak.snapshotting.interval: 1

services:
  _defaults:
    public: false
    autowire: false

  Streak\Infrastructure\Domain\Clock\ServerTimeClock: ~

  Streak\Domain\Clock:
    alias: Streak\Infrastructure\Domain\Clock\ServerTimeClock

  streak.redis:
    class: Redis
    calls:
    - ['pconnect', ['%streak.redis.host%', '%streak.redis.port%']]
    - ['select', ['%streak.redis.database%']]

  Streak\Infrastructure\Domain\Serializer\PhpSerializer: ~

  Streak\Infrastructure\Domain\Serializer\IGBinarySerializer: ~

  Streak\Infrastructure\Domain\Event\Converter\NestedObjectConverter: ~

  Streak\Infrastructure\Domain\Event\Converter\CompositeConverter:
    arguments:
      - '@Streak\Infrastructure\Domain\Event\Converter\NestedObjectConverter'

  Streak\Domain\Event\Converter:
    alias: Streak\Infrastructure\Domain\Event\Converter\CompositeConverter

  Streak\Infrastructure\Domain\Event\Subscription\DAO\DbalPostgresDAO:
    arguments:
      - '@Streak\Domain\Event\Subscription\Factory'
      - '@Streak\Domain\Event\Listener\Factory'
      - '@streak.dbal.postgres.event_store.connection'
      - '@Streak\Domain\Event\Converter'

  Streak\Infrastructure\Domain\Event\Subscription\DAO\InMemoryDAO: ~

  Streak\Infrastructure\Domain\Event\Subscription\DAO:
    alias: Streak\Infrastructure\Domain\Event\Subscription\DAO\DbalPostgresDAO

  Streak\Infrastructure\Domain\Event\Subscription\DAO\IdentityMappingDao:
    decorates: Streak\Infrastructure\Domain\Event\Subscription\DAO
    arguments:
      - '@.inner'

  Streak\Infrastructure\Domain\UnitOfWork\EventStoreUnitOfWork:
    arguments:
      - '@Streak\Domain\EventStore'

  Streak\Infrastructure\Domain\UnitOfWork\SubscriptionDAOUnitOfWork:
    arguments:
      - '@Streak\Infrastructure\Domain\Event\Subscription\DAO'

  Streak\Infrastructure\Domain\UnitOfWork\SnapshottingUnitOfWork:
    decorates: Streak\Infrastructure\Domain\UnitOfWork\EventStoreUnitOfWork
    arguments:
      - '@.inner'
      - '@Streak\Infrastructure\Domain\AggregateRoot\Snapshotter'
      - '%streak.snapshotting.interval%'

  Streak\Infrastructure\Domain\UnitOfWork\CompositeUnitOfWork:
    arguments:
      - '@Streak\Infrastructure\Domain\UnitOfWork\EventStoreUnitOfWork'
      - '@Streak\Infrastructure\Domain\UnitOfWork\SubscriptionDAOUnitOfWork'
    public: true

  Streak\StreakBundle\LazyLoaders\LazyLoadedUnitOfWork:
    arguments:
      - '@service_container'

  Streak\Infrastructure\Domain\UnitOfWork:
    alias: Streak\StreakBundle\LazyLoaders\LazyLoadedUnitOfWork

  Streak\Infrastructure\Domain\Event\Sourced\Subscription\Factory:
    arguments:
      - '@Streak\Domain\Clock'

  Streak\Infrastructure\Domain\Event\Subscription\DAO\Subscription\Factory:
    arguments:
      - '@Streak\Domain\Clock'

  Streak\Domain\Event\Subscription\Factory:
    alias: Streak\Infrastructure\Domain\Event\Sourced\Subscription\Factory

  Streak\Infrastructure\Domain\Event\Subscription\CommittingSubscription\Factory:
    decorates: Streak\Domain\Event\Subscription\Factory
    arguments:
      - '@.inner'
      - '@Streak\Infrastructure\Domain\UnitOfWork'

  Streak\Infrastructure\Domain\Event\Subscription\DbalTransactionalSubscription\Factory:
    decorates: Streak\Domain\Event\Subscription\Factory
    arguments:
      - '@.inner'
      - '@streak.dbal.postgres.event_store.connection'
      - 1

  Streak\Infrastructure\Domain\Event\Listener\CompositeFactory: ~

  Streak\Domain\Event\Listener\Factory:
    alias: Streak\Infrastructure\Domain\Event\Listener\CompositeFactory

  Streak\Infrastructure\Domain\Event\Subscription\EventSourcedRepository:
    arguments:
      - '@Streak\Domain\Event\Subscription\Factory'
      - '@Streak\Domain\Event\Listener\Factory'
      - '@Streak\Domain\EventStore'
      - '@Streak\Infrastructure\Domain\UnitOfWork'

  Streak\Infrastructure\Domain\Event\Subscription\DAO\DAORepository:
    arguments:
      - '@Streak\Infrastructure\Domain\Event\Subscription\DAO'
      - '@Streak\Infrastructure\Domain\UnitOfWork'

  Streak\Domain\Event\Subscription\Repository:
    alias: Streak\Infrastructure\Domain\Event\Subscription\EventSourcedRepository

  Streak\Infrastructure\Domain\EventBus\NullEventBus: ~

  Streak\Infrastructure\Domain\EventBus\InMemoryEventBus: ~

  Streak\Domain\EventBus:
    alias: Streak\Infrastructure\Domain\EventBus\InMemoryEventBus

  Streak\Infrastructure\Application\CommandBus\NullCommandBus: ~

  Streak\Infrastructure\Application\CommandBus\SynchronousCommandBus: ~

  Streak\Application\CommandBus:
    alias: Streak\Infrastructure\Application\CommandBus\SynchronousCommandBus
    public: true

  Streak\Infrastructure\Application\CommandBus\CommittingCommandBus:
    decorates: Streak\Application\CommandBus
    arguments:
      - '@.inner'
      - '@Streak\Infrastructure\Domain\UnitOfWork'

  Streak\Infrastructure\Application\CommandBus\DbalTransactionalCommandBus:
    decorates: Streak\Application\CommandBus
    arguments:
      - '@.inner'
      - '@streak.dbal.postgres.event_store.connection'

  Streak\Infrastructure\Application\CommandBus\RetryingCommandBus:
    decorates: Streak\Application\CommandBus
    arguments:
      - '@.inner'
      - '%streak.command_retry_max_attempts%'

  Streak\Infrastructure\Application\QueryBus\SynchronousQueryBus: ~

  Streak\Application\QueryBus:
    alias: Streak\Infrastructure\Application\QueryBus\SynchronousQueryBus
    public: true

  Streak\Infrastructure\Domain\EventStore\DbalPostgresEventStore:
    arguments:
      - '@streak.dbal.postgres.event_store.connection'
      - '@Streak\Domain\Event\Converter'

  Streak\Infrastructure\Domain\EventStore\InMemoryEventStore: ~

  Streak\Domain\EventStore:
    alias: Streak\Infrastructure\Domain\EventStore\DbalPostgresEventStore
    public: true

  Streak\Infrastructure\Domain\EventStore\PublishingEventStore:
    decorates: Streak\Domain\EventStore
    arguments:
      - '@.inner'
      - '@Streak\Domain\EventBus'

  Streak\Infrastructure\Domain\AggregateRoot\Factory\CompositeFactory: ~

  Streak\Domain\AggregateRoot\Factory:
    alias: Streak\Infrastructure\Domain\AggregateRoot\Factory\CompositeFactory

  Streak\Infrastructure\Domain\Serializer:
    alias: Streak\Infrastructure\Domain\Serializer\PhpSerializer

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage\RedisStorage:
    arguments:
      - '@streak.redis'

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage\InMemoryStorage: ~

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage:
    alias: Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage\RedisStorage

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\SnapshottableAggregatesSnapshotter:
    arguments:
      - '@Streak\Infrastructure\Domain\Serializer'
      - '@Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage'

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\NullSnapshotter: ~

  Streak\Infrastructure\Domain\AggregateRoot\Snapshotter:
    alias: Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\NullSnapshotter

  Streak\Infrastructure\Domain\AggregateRoot\Repository\EventSourcedRepository:
    arguments:
      - '@Streak\Domain\AggregateRoot\Factory'
      - '@Streak\Domain\EventStore'
      - '@Streak\Infrastructure\Domain\AggregateRoot\Snapshotter'
      - '@Streak\Infrastructure\Domain\UnitOfWork'

  Streak\Domain\AggregateRoot\Repository:
    alias: Streak\Infrastructure\Domain\AggregateRoot\Repository\EventSourcedRepository

  Streak\StreakBundle\Command\RunSubscriptionsCommand:
    arguments:
      - '@Streak\Domain\Event\Subscription\Repository'
    tags:
      - { name: 'console.command' }

  Streak\StreakBundle\Command\RunSubscriptionCommand:
    arguments:
      - '@Streak\Domain\Event\Subscription\Repository'
      - '@Streak\Domain\EventStore'
    tags:
      - { name: 'console.command' }

  Streak\StreakBundle\Command\RestartSubscriptionCommand:
    arguments:
      - '@Streak\Domain\Event\Subscription\Repository'
    tags:
      - { name: 'console.command' }

  Streak\StreakBundle\Command\ResetSnapshotsCommand:
    arguments:
      - '@Streak\Infrastructure\Domain\AggregateRoot\Snapshotter\Storage'
    tags:
      - { name: 'console.command' }

  Streak\StreakBundle\Command\CreateEventStoreSchemaCommand:
    arguments:
      - '@Streak\Domain\EventStore'
    tags:
      - { name: 'console.command' }

  Streak\StreakBundle\Command\DropEventStoreSchemaCommand:
    arguments:
      - '@Streak\Domain\EventStore'
    tags:
      - { name: 'console.command' }
