parameters:
  streak.redis.host: 'localhost'
  streak.redis.port: 6379
  streak.redis.database: 1
  streak.command_retry_max_attempts: 0

services:

  streak.clock.server_time:
    class: Streak\Infrastructure\ServerTimeClock

  streak.clock: '@streak.clock.server_time'

  streak.redis:
    class: Redis
    calls:
    - ['pconnect', ['%streak.redis.host%', '%streak.redis.port%']]
    - ['select', ['%streak.redis.database%']]

  streak.php.serializer:
    class: Streak\Infrastructure\Serializer\PhpSerializer

  streak.igbinary.serializer:
    class: Streak\Infrastructure\Serializer\IGBinarySerializer

  streak.flat.event_converter:
    class: Streak\Infrastructure\Event\Converter\FlatObjectConverter

  streak.composite.event_converter:
    class: Streak\Infrastructure\Event\Converter\CompositeConverter
    arguments:
      - '@streak.flat.event_converter'

  streak.event_converter: '@streak.composite.event_converter'

  streak.event_store.unit_of_work:
    class: Streak\Infrastructure\UnitOfWork\EventStoreUnitOfWork
    arguments:
    - '@streak.event_store'

  streak.unit_of_work: '@streak.event_store.unit_of_work'

  streak.snapshotting.unit_of_work:
    class: Streak\Infrastructure\UnitOfWork\SnapshottingUnitOfWork
    decorates: streak.unit_of_work
    arguments:
      - '@streak.snapshotting.unit_of_work.inner'
      - '@streak.snapshotter'

  streak.event_sourced.subscription_factory:
    class: Streak\Domain\Event\Sourced\Subscription\Factory
    arguments:
      - '@streak.clock'

  streak.subscription_factory: '@streak.event_sourced.subscription_factory'

  streak.composite.listener_factory:
    class: Streak\Infrastructure\Event\Listener\CompositeFactory

  streak.listener_factory: '@streak.composite.listener_factory'

  streak.event_sourced.subscription_repository:
    class: Streak\Infrastructure\Event\Subscription\EventSourcedRepository
    arguments:
      - '@streak.subscription_factory'
      - '@streak.listener_factory'
      - '@streak.event_store'
      - '@streak.unit_of_work'

  streak.subscription_repository: '@streak.event_sourced.subscription_repository'

  streak.null.event_bus:
    class: Streak\Infrastructure\EventBus\NullEventBus

  streak.in_memory.event_bus:
    class: Streak\Infrastructure\EventBus\InMemoryEventBus

  streak.event_bus: '@streak.in_memory.event_bus'

  streak.composite.command_handler:
    class: Streak\Infrastructure\CommandHandler\CompositeCommandHandler

  streak.command_handler: '@streak.composite.command_handler'

  streak.transactional_persistence.command_handler:
    class: Streak\Infrastructure\CommandHandler\TransactionalPersistenceCommandHandler
    decorates: streak.command_handler
    arguments:
      - '@streak.transactional_persistence.command_handler.inner'
      - '@streak.unit_of_work'

  streak.null.command_bus:
    class: Streak\Infrastructure\CommandBus\NullCommandBus

  streak.synchronous.command_bus:
    class: Streak\Infrastructure\CommandBus\SynchronousCommandBus
    calls:
      - [ register, [ '@streak.command_handler' ] ]

  streak.command_bus:
    alias: 'streak.synchronous.command_bus'
    public: true

  streak.composite.query_handler:
    class: Streak\Infrastructure\QueryHandler\CompositeQueryHandler

  streak.query_handler: '@streak.composite.query_handler'

  streak.synchronous.query_bus:
    class: Streak\Infrastructure\QueryBus\SynchronousQueryBus
    calls:
      - [ register, [ '@streak.query_handler' ]]

  streak.query_bus:
    alias: 'streak.synchronous.query_bus'
    public: true

  streak.retrying.command_bus:
    class: Streak\Infrastructure\CommandBus\RetryingCommandBus
    decorates: streak.command_bus
    arguments:
    - '@streak.retrying.command_bus.inner'
    - '%streak.command_retry_max_attempts%'

  streak.dbal.postgres.event_store:
    class: Streak\Infrastructure\EventStore\DbalPostgresEventStore
    arguments:
      - '@streak.dbal.postgres.event_store.connection'
      - '@streak.event_converter'

  streak.event_store:
    alias: 'streak.dbal.postgres.event_store'
    public: true

  streak.publishing.event_store:
    class: Streak\Infrastructure\EventStore\PublishingEventStore
    decorates: streak.event_store
    arguments:
      - '@streak.publishing.event_store.inner'
      - '@streak.event_bus'

  streak.composite.aggregate_factory:
    class: Streak\Infrastructure\AggregateRoot\Factory\CompositeFactory

  streak.aggregate_factory: '@streak.composite.aggregate_factory'

  streak.snapshotter_serializer: '@streak.php.serializer'

  streak.redis.snapshotter_storage:
    class: Streak\Infrastructure\AggregateRoot\Snapshotter\Storage\RedisStorage
    arguments:
      - '@streak.redis'

  streak.in_memory.snapshotter_storage:
    class: Streak\Infrastructure\AggregateRoot\Snapshotter\Storage\InMemoryStorage

  streak.snapshotter_storage: '@streak.redis.snapshotter_storage'

  streak.snapshottable_aggregates.snapshotter:
    class: Streak\Infrastructure\AggregateRoot\Snapshotter\SnapshottableAggregatesSnapshotter
    arguments:
      - '@streak.snapshotter_serializer'
      - '@streak.snapshotter_storage'

  streak.null.snapshotter:
    class: Streak\Infrastructure\AggregateRoot\Snapshotter\NullSnapshotter

  streak.snapshotter: '@streak.null.snapshotter'

  streak.event_sourced.aggregate_repository:
    class: Streak\Infrastructure\AggregateRoot\Repository\EventSourcedRepository
    arguments:
      - '@streak.aggregate_factory'
      - '@streak.event_store'
      - '@streak.snapshotter'
      - '@streak.unit_of_work'

  streak.aggregate_repository: '@streak.event_sourced.aggregate_repository'

  streak.subscriptions_run.command:
    class: Streak\StreakBundle\Command\RunSubscriptionsCommand
    arguments:
      - '@streak.subscription_repository'
    tags:
      - { name: 'console.command' }

  streak.subscription_run.command:
    class: Streak\StreakBundle\Command\RunSubscriptionCommand
    arguments:
      - '@streak.subscription_repository'
      - '@streak.event_store'
      - '@streak.unit_of_work'
    tags:
      - { name: 'console.command' }

  streak.subscriptions_restart.command:
    class: Streak\StreakBundle\Command\RestartSubscriptionsCommand
    arguments:
      - '@streak.subscription_repository'
      - '@streak.unit_of_work'
    tags:
      - { name: 'console.command' }

  streak.reset_snasphots.command:
    class: Streak\StreakBundle\Command\ResetSnapshotsCommand
    arguments:
      - '@streak.snapshotter_storage'
    tags:
      - { name: 'console.command' }

  streak.create_event_store.command:
    class: Streak\StreakBundle\Command\CreateEventStoreSchemaCommand
    arguments:
      - '@streak.event_store'
    tags:
      - { name: 'console.command' }

  streak.drop_event_store.command:
    class: Streak\StreakBundle\Command\DropEventStoreSchemaCommand
    arguments:
      - '@streak.event_store'
    tags:
      - { name: 'console.command' }

  Streak\Domain\Clock: '@streak.clock'
  Streak\Domain\Event\Converter: '@streak.event_converter'
  Streak\Infrastructure\UnitOfWork: '@streak.unit_of_work'
  Streak\Domain\Event\Subscription\Factory: '@streak.subscription_factory'
  Streak\Domain\Event\Listener\Factory: '@streak.listener_factory'
  Streak\Domain\Event\Subscription\Repository: '@streak.subscription_repository'
  Streak\Domain\EventBus: '@streak.event_bus'
  Streak\Application\CommandHandler: '@streak.command_handler'
  Streak\Application\CommandBus: '@streak.command_bus'
  Streak\Domain\EventStore: '@streak.event_store'
  Streak\Domain\AggregateRoot\Factory: '@streak.aggregate_factory'
  Streak\Infrastructure\AggregateRoot\Snapshotter: '@streak.snapshotter'
  Streak\Domain\AggregateRoot\Repository: '@streak.aggregate_repository'
